登录MySql(环境标量已配置)
W: mysql -uroot -p123
L: mysql -uroot -p

***//查看所有数据库
SHOW DATABASES;

=======================================database基本操作=============================================++++++++==================================
***//创建数据库
  create database mydb1;// create database if not exists mybd1;
  CREATE DATABASE mydb1;// CREATE DATABASE IF NOT EXISTS mybd1

//查看数据库创建细节
  SHOW CREATE DATABASE mydb1;

//创建时使用指定编码
  CREATE DATABASE mydb2 CHARACTE R SET GBK;

//查看gbk字符集下,校验规则
  SHOW COLLATION LIKE 'gbk';(响应Empty set (0.00 sec))

//创建带校验规则的数据库
  CREATE DATABASE mydb3 CHARACTER SET GBK COLLATE gbk_chinese_ci;

***//删除某数据库
  DROP DATABASE mydb3;

***//修改数据库
  ALTER DATABASE mydb1 CHARACTER SET utf8;
  ALTER DATABASE mydb2 CHARACTER SET utf8;
=======================================database基本操作===============================================++++++++++================================


==============================================表操作=============================================================++============================
*********数据类型**********************************************************************************
 * BIT(M)	                            位类型。M指定位数，默认值1，范围1-64                         *
 * TINYINT [UNSIGNED] [ZEROFILL] 	    带符号的范围是-128到127。无符号0到255。                      *
 * BOOL，BOOLEAN 	                    使用0或1表示真或假                                          *
 * SMALLINT [UNSIGNED] [ZEROFILL] 	    2的16次方                                                  *
 * INT [UNSIGNED] [ZEROFILL] 	        2的32次方                                                  *
 * BIGINT [UNSIGNED] [ZEROFILL] 	    2的64次方                                                  *
 * FLOAT[(M,D)] [UNSIGNED] [ZEROFILL] 	M指定显示长度，d指定小数位数                                  *
 * DOUBLE[(M,D)][UNSIGNED][ZEROFILL]	表示比float精度更大的小数                                    *
 * CHAR(最大长度) 	                    固定长度字符串                                              *
 * VARCHAR(最大长度)  	                可变长度字符串                                              *
 * BLOB   LONGBLOB	                    二进制数据 (二进制大对象)                                    *
 * TEXT(clob)     LONGTEXT(longclob)	大文本    (文本大对象)                                      *
 * DATE/DATETIME/TimeStamp	            日期类型(YYYY-MM-DD)  (YYYY-MM-DD HH:MM:SS)，              *
                                        TimeStamp表示时间戳，它可用于自动记录insert、update操作的时间  *
*********数据类型***********************************************************************************

//创建表
    CREATE TABLE 表名(
    id INT,
    name VARCHAR(100),
    gender VARCHAR(10),
    brithday DATE,
    entry_date DATE,
    job VARCHAR(100),
    salary FLOAT(7,2),
    resume LONGTEXT);

****************常规操作************************************************
*//插入                                                                *
*  insert into 表名 values(1,2,3,4,5,6);                               *
*  insert into 表名 ( a, b ) values ( 1,2 );                           *
*//删除                                                                *
*  delete from 表名 [where 子句]                                        *
*//修改                                                                *
*  update table_name SET field1=1, field2=2 [WHERE 子句]               *
*//查询                                                                *
*  select * from 表名                                                  *
*  select 列名1,列名2 from 表名 [where 子句] [limit n][ offset m]        *
*  select 列1, 列2 from 表1, 表2 order by 列1 [asc/desc],列2 [asc/desc] *
*                      where between  10 and 20                        *
*                      where 列 in (10,15,20)                          *
*                      where 列 like  'a%'                             *
****************常规操作*************************************************

****************列操作***************************************
*//添加一列                                                 *
*   alter table emp add column image blob;                 *
*//修改name列，使其长度为60。                                 *
*   alter table emp modify column name varchar(60);        *
*//列名修改为。                                              *
*   alter table 表名 change 列名1 列名2 varchar(50);         *
*//删除image列。                                            *
*   alter table emp drop column birthday;                  *
****************列操作***************************************

//删除表所有数据只是删除数据
  mysql> delete from 表名;
//使用truncate,重置表
  mysql>truncate table 表名

//常规查询
select 列名1 from 表名;
//常规查询排除重复数据
select distinct 列名1 from 表名;

****************表属性******************
//表名修改
alter table 旧名 rename to 新名;
rename table 旧名 to 新名;
//修改表的字符集为utf8(修改编码结构)。
alter table 表名 character set utf8;
//查看表
DESC employee;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| id    | int(11)     | NO   | PRI | NULL    | auto_increment |
| name  | varchar(32) | YES  |     | NULL    |                |
+-------+-------------+------+-----+---------+----------------+
//显示表信息
show create table 表名;
//在MySQL中一共有6个地方使用了字符集,通过命令查看
show variables like 'character%';
show variables like "%char%";
+--------------------------+-------------------------------------------------------+
| Variable_name            | Value                                                 |
+--------------------------+-------------------------------------------------------+
| character_set_client     | utf8mb4                                               |
| character_set_connection | utf8mb4                                               |
| character_set_database   | latin1                                                |
| character_set_filesystem | binary                                                |
| character_set_results    | utf8mb4                                               |
| character_set_server     | latin1                                                |
| character_set_system     | utf8                                                  |
| character_sets_dir       | C:\ProgramUser\MySQL\MySQL Server 5.5\share\charsets\ |
+--------------------------+-------------------------------------------------------+
//以某编码接收以默认编码储存,再以设置编码输出;(单次连接有效)
  set character_set_client=utf8;
//设置取出显示结果集用gbk编码：
  set character_set_results=utf8;
****************表属性******************

==============================================表操作========================================================+++++++===========================


===============================================文件配置=======================================================================================
C:\ProgramUser\MySQL\MySQL Server 5.5\my.ini文件

//修改MySql编码
//default-character-set=utf8
//暂时无法使用
//[client]
//default-character-set=utf8
//仅使用此设置即可
在[mysqld]下添加
character-set-server=utf8
===============================================文件配置=======================================================================================